version: '3.8'

services:
  # Frontend React application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_SERVER_URL=http://backend:4000
      - VITE_SSE_URL=http://backend:4000/events
    depends_on:
      - backend
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    networks:
      - delta-lake-network

  # Backend API server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DELTA_TABLE_PATH=/data/delta_lake
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=web-logs
      - KAFKA_GROUP_ID=ui-bridge-group
    volumes:
      - delta-lake-data:/data
    depends_on:
      - kafka
    networks:
      - delta-lake-network

  # Kafka for streaming data (optional)
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - delta-lake-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - delta-lake-network

volumes:
  delta-lake-data:

networks:
  delta-lake-network:
    driver: bridge